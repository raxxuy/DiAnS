services:
  postgres:
    image: postgres:16
    env_file: .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  issuer-scraper:
    build:
      context: .
      dockerfile: scrapers/issuer-service/Dockerfile
    environment:
      - DB_HOST=postgres
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "test -f /app/scraping_complete || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  news-scraper:
    build:
      context: .
      dockerfile: scrapers/news-service/Dockerfile
    environment:
      - DB_HOST=postgres
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy

  issuer-news-scraper:
    build:
      context: .
      dockerfile: scrapers/issuer_news-service/Dockerfile
    environment:
      - DB_HOST=postgres
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      issuer-scraper:
        condition: service_healthy
      postgres:
        condition: service_healthy

volumes:
  postgres_data: